#!/usr/bin/env bash
# Codex + watchers launcher (v5): no grid needed; watchers in separate window.
set -Eeuo pipefail

SESSION="${SESSION:-dev}"
APP_WIN="${WINDOW:-app}"
WATCH_WIN="watch"
UI_MODE="${UI_MODE:-zoom}"   # zoom (default) | watch | grid

# Commands (override via env if needed)
if command -v codex >/dev/null 2>&1; then AGENT_CMD_DEFAULT="codex";
elif command -v cod   >/dev/null 2>&1; then AGENT_CMD_DEFAULT="cod";
else AGENT_CMD_DEFAULT="$SHELL"; fi
AGENT_CMD="${AGENT_CMD:-$AGENT_CMD_DEFAULT}"
DEV_CMD="${DEV_CMD:-npm run dev}"
TEST_CMD="${TEST_CMD:-npm test -- --watch}"
TSC_CMD="${TSC_CMD:-npx tsc -w --noEmit}"
LINT_CMD=${LINT_CMD:-'npx chokidar "**/*.{js,jsx,ts,tsx}" -i "**/{.git,node_modules,.next}/**" -c "npm run lint --silent || true" --initial'}
LOGS_CMD="${LOGS_CMD:-(tail -f logs/*.log 2>/dev/null || printf "no logs\n"; exec $SHELL)}"

ensure_session_window() {
  if ! tmux has-session -t "$SESSION" 2>/dev/null; then
    tmux new-session -d -s "$SESSION" -n "$APP_WIN" "$AGENT_CMD"
  elif ! tmux list-windows -t "$SESSION" -F '#W' | grep -qx "$APP_WIN"; then
    tmux new-window -t "$SESSION" -n "$APP_WIN" "$AGENT_CMD"
  fi
}

start_watchers_in_watch_window() {
  if ! tmux list-windows -t "$SESSION" -F '#W' | grep -qx "$WATCH_WIN"; then
    tmux new-window -t "$SESSION" -n "$WATCH_WIN" "$SHELL"
  fi

  # Try to make 5 panes; if splitting fails (tiny terminal), fall back to one pane per window.
  splits_ok=1
  count() { tmux list-panes -t "$SESSION:$WATCH_WIN" | wc -l | tr -d ' '; }
  for _ in 1 2 3 4; do
    if ! tmux split-window -t "$SESSION:$WATCH_WIN" -d 2>/dev/null; then
      splits_ok=0; break
    fi
  done
  if [ "$splits_ok" -eq 1 ]; then
    tmux select-layout -t "$SESSION:$WATCH_WIN" tiled
    mapfile -t WP < <(tmux list-panes -t "$SESSION:$WATCH_WIN" -F '#{pane_id}')
    DEV_P=${WP[0]} ; TEST_P=${WP[1]} ; TSC_P=${WP[2]} ; LINT_P=${WP[3]} ; LOGS_P=${WP[4]}

    tmux send-keys -t "$DEV_P"  C-c "$DEV_CMD"  C-m
    tmux send-keys -t "$TEST_P" C-c "$TEST_CMD" C-m
    tmux send-keys -t "$TSC_P"  C-c "$TSC_CMD"  C-m
    tmux send-keys -t "$LINT_P" C-c "$LINT_CMD" C-m
    tmux send-keys -t "$LOGS_P" C-c "$LOGS_CMD" C-m
    tmux display-message "Watchers in '$WATCH_WIN' window (Ctrl-b w)."
  else
    # Fallback: five separate windows (never fails on small screens)
    tmux setenv -g DEV_CMD  "$DEV_CMD"
    tmux setenv -g TEST_CMD "$TEST_CMD"
    tmux setenv -g TSC_CMD  "$TSC_CMD"
    tmux setenv -g LINT_CMD "$LINT_CMD"
    tmux setenv -g LOGS_CMD "$LOGS_CMD"

    for name in dev test types lint logs; do
      # Close existing named watch windows if present
      tmux list-windows -t "$SESSION" -F '#W' | grep -qx "watch:$name" && tmux kill-window -t "$SESSION:watch:$name"
    done

    tmux new-window -t "$SESSION" -n "watch:dev"   'bash -lc "$DEV_CMD"'
    tmux new-window -t "$SESSION" -n "watch:test"  'bash -lc "$TEST_CMD"'
    tmux new-window -t "$SESSION" -n "watch:types" 'bash -lc "$TSC_CMD"'
    tmux new-window -t "$SESSION" -n "watch:lint"  'bash -lc "$LINT_CMD"'
    tmux new-window -t "$SESSION" -n "watch:logs"  'bash -lc "$LOGS_CMD"'
    tmux display-message "Watchers in windows watch:* (Ctrl-b w)."
  fi
}

main() {
  ensure_session_window

  case "$UI_MODE" in
    grid)
      # Try a 6-pane grid in the APP window; if it fails, fall back to watchers window.
      ok=1
      tmux resize-pane -Z -t "$SESSION:$APP_WIN" 2>/dev/null || true
      count_app() { tmux list-panes -t "$SESSION:$APP_WIN" | wc -l | tr -d ' '; }
      while [ "$(count_app)" -lt 6 ]; do
        if ! tmux split-window -t "$SESSION:$APP_WIN" -d 2>/dev/null; then ok=0; break; fi
      done
      if [ "$ok" -eq 1 ]; then
        tmux select-layout -t "$SESSION:$APP_WIN" tiled
        mapfile -t P < <(tmux list-panes -t "$SESSION:$APP_WIN" -F '#{pane_id}')
        COD=${P[0]} ; DEV=${P[1]} ; TEST=${P[2]} ; TSC=${P[3]} ; LINT=${P[4]} ; LOGS=${P[5]}
        tmux send-keys -t "$DEV"  C-c "$DEV_CMD"  C-m
        tmux send-keys -t "$TEST" C-c "$TEST_CMD" C-m
        tmux send-keys -t "$TSC"  C-c "$TSC_CMD"  C-m
        tmux send-keys -t "$LINT" C-c "$LINT_CMD" C-m
        tmux send-keys -t "$LOGS" C-c "$LOGS_CMD" C-m
        tmux select-pane -t "$COD"
        tmux display-message "UI_MODE=grid â€” toggle zoom with Ctrl-b z."
        exec tmux attach -t "$SESSION:$APP_WIN"
      fi
      # Fall through to watchers-in-window if grid failed
      ;;
  esac

  # Default path: keep APP window as a single Codex pane; run watchers in separate window(s).
  start_watchers_in_watch_window
  tmux select-window -t "$SESSION:$APP_WIN"
  tmux select-pane -t "$SESSION:$APP_WIN".0
  [ "$UI_MODE" = "zoom" ] && tmux resize-pane -Z -t "$SESSION:$APP_WIN".0 2>/dev/null || true
  exec tmux attach -t "$SESSION:$APP_WIN"
}

main
