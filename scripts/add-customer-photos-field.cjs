/**
 * Add Customer Photos field to Notion database
 */

const addCustomerPhotosField = async () => {
  const apiKey = 'YOUR_NOTION_API_KEY_HERE'
  const databaseId = '2707c58a-5877-81af-9e26-ff0d9a5e0ae3'

  console.log('üì∏ Adding Customer Photos field to Somerset Window Cleaning database...')
  console.log('Database ID:', databaseId)
  console.log('')

  // New customer photos field
  const photosField = {
    'Customer Photos': {
      files: {}
    }
  }

  try {
    console.log('üìù Adding "Customer Photos" field...')
    
    const response = await fetch(`https://api.notion.com/v1/databases/${databaseId}`, {
      method: 'PATCH',
      headers: {
        'Authorization': `Bearer ${apiKey}`,
        'Notion-Version': '2022-06-28',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        properties: photosField
      })
    })

    const result = await response.json()

    if (response.ok) {
      console.log('‚úÖ Successfully added "Customer Photos" field!')
      console.log('')
      console.log('üì∏ CUSTOMER PHOTOS FIELD DETAILS:')
      console.log('‚Ä¢ Field Name: Customer Photos')
      console.log('‚Ä¢ Field Type: Files (multiple attachments)')
      console.log('‚Ä¢ Purpose: Store customer-uploaded property photos')
      console.log('')
      console.log('üíº BUSINESS BENEFITS:')
      console.log('‚Ä¢ Visual property assessment for accurate quotes')
      console.log('‚Ä¢ Better understanding of property size and layout')
      console.log('‚Ä¢ Identify specific areas needing attention')
      console.log('‚Ä¢ Reduce need for property visits')
      console.log('‚Ä¢ Enhanced customer service with visual context')
      console.log('')
      console.log('üìã PHOTO CAPABILITIES:')
      console.log('‚Ä¢ Up to 5 photos per customer')
      console.log('‚Ä¢ 10MB maximum file size per photo')
      console.log('‚Ä¢ Supports JPG, PNG, WebP, HEIC formats')
      console.log('‚Ä¢ Photos automatically attached to customer records')
      console.log('‚Ä¢ Viewable directly in Notion database')
      console.log('')
      console.log('üîß Next steps:')
      console.log('1. Update API route to attach uploaded photos')
      console.log('2. Test photo upload functionality')
      console.log('3. Verify photos appear in Notion customer records')
      
    } else {
      console.log('‚ùå Failed to add customer photos field:', result.message)
      console.log('Error details:', result)
    }

  } catch (error) {
    console.error('‚ùå Network error:', error.message)
  }
}

addCustomerPhotosField()